server.port=9091
#当前服务的名字
spring.application.name=REST-TEMPLATE
eureka.instance.metadata-map.cluster=EUREKA-CUSTOM
#服务注册中心
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
logging.level.root=DEBUG
#调用配置服务传输数据和查询数据过大所以设置大点
ribbon.ReadTimeout=6000
ribbon.ConnectionTimeout=1000
#开启熔断器功能
feign.hystrix.enabled=true
#配置参数参考代码com.netflix.hystrix.HystrixCommandProperties.HystrixCommandProperties(com.netflix.hystrix.HystrixCommandKey, com.netflix.hystrix.HystrixCommandProperties.Setter, java.lang.String)
#过多长时间，熔断器再次检测是否开启，默认为5000，即5s钟
#默认值20。含义是一段时间内至少有20个请求才进行errorThresholdPercentage计算。比如一段时间了有19个请求，且这些请求全部失败了，错误率是100%，但熔断器不会打开，总请求数不满足20。
#半开状态试探睡眠时间，默认值5000ms。如：当熔断器开启5000ms之后，会尝试放过去一部分流量进行试探，确定依赖服务是否恢复。
#触发短路的时间值，当该值设为5000时，则当触发circuit break后的5000毫秒内都会拒绝request，也就是5000毫秒后才会关闭circuit。默认5000
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=2134
##命令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=4444
#错误率，默认50%
#错误率，默认值50%，例如一段时间（10s）内有100个请求，其中有54个超时或者异常，那么这段时间内的错误率是54%，大于了默认值50%，这种情况下会触发熔断器打开。
hystrix.command.default.circuitBreaker.errorThresholdPercentage=88
#线程池大小
hystrix.threadpool.default.coreSize=1
#（最大排队长度。默认-1，使用SynchronousQueue。其他值则使用 LinkedBlockingQueue。
# 如果要从-1换成其他值则需重启，即该值不能动态调整，若要动态调整，需要使用到下边这个配置）
hystrix.threadpool.default.maxQueueSize=1
#注意：如果maxQueueSize=-1的话，则该选项不起作用
# （排队线程数量阈值，默认为5，达到时拒绝，如果配置了该选项，队列的大小是该队列）
hystrix.threadpool.default.queueSizeRejectionThreshold=1

